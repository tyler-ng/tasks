service: tasks-api

frameworkVersion: '4'
useDotenv: true


provider:
  name: aws
  runtime: python3.12
  region: 'eu-west-1'
  stage: ${opt:stage, 'development'}
  logRetentionInDays: 90
  environment:
    APP_ENVIRONMENT: ${self:provider.stage}
iam:
  role:
    statements:
      - Effect: Allow
        Action:
          - dynamodb:DescribeTable
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          - "Fn::GetAtt": [ TasksAPITable, Arn ]
          - "Fn::Join": ['/', ["Fn::GetAtt": [ TasksAPITable, Arn ], 'index', '*']]

functions:
  API:
    handler: main.handle
    timeout: 10
    memorySize: 512
    events:
      - http:
          path: /{proxy+}
          method: any
          cors:
            origin: ${env:ALLOWED_ORIGINS}
            maxAge: 60


custom:
  pythonRequirements:
    usePoetry: true
    noDeploy:
      - boto3 # already on Lambda
      - botocore # already on Lambda

plugins:
  - serverless-python-requirements

resources:
  - ${file(resources/dynamodb.yml)}